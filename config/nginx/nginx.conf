# upstream api_upstream {
#    server api:8000;
#   }
# server {
#    listen 80;
#    server_name www.scholli.site scholli.site; 
#    #server_name can add your domain or Ip address for your server in the production
#    client_max_body_size 200M;
#    location / {
#       proxy_set_header X-Url-Scheme $scheme;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header Host $http_host;
#       proxy_redirect off;
#       proxy_pass http://api_upstream;
#      }
#  }

# nginx/nginx.conf
upstream resumai { # django_docker라는 upstream 서버를 정의
  server web:8000; # web의 8000포트에 연결. web은 docker container임
}

server { # nginx server를 정의

  listen 80; # 80포트를 열어줌 (http)

  location / { # "/" 도메인에 도달하면 아래 proxy를 수행
    proxy_pass http://resumai;  # resumai라는 upstream으로 요청을 전달

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # header 설정
    proxy_set_header Host $host;
    proxy_redirect off;

    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    send_timeout 300s;
  }

  location /static/ { # "/static/" 도메인에 도달하면 아래 alias를 수행
    alias /home/app/web/static/; # 아래 디렉토리 (서버의 파일시스템)을 매핑
  }

  location /media/ {
    alias /home/app/web/media/; # 위와 동일
  }
}